version: "3"

services:
  postgres:
    image: postgres:13.2-alpine
    ports:
      - "5432:5432"
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
      - ./src/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-newPassword}
      POSTGRES_DB: ${POSTGRES_DB:-my-db-name}
    networks:
      - awesome

  pgadmin:
    image: dpage/pgadmin4:4.18
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: "80"
    ports:
      - "8080:80"
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - awesome

  my-app:
    depends_on:
      - postgres
    image: cr.yandex/${REGISTRY_ID}/places:latest
    platform: linux/amd64
    build:
      context: .
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      - ./uploads:/usr/src/app/uploads
    environment:
      - DATABASE_URL=$DATABASE_URL
      - POSTGRES_HOST=$POSTGRES_HOST
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - NODE_ENV=$NODE_ENV
      - PORT=3000
      - CLIENT_ID=$CLIENT_ID
      - CLIENT_SECRET=$CLIENT_SECRET
      - DEV_JWT_SECRET=$DEV_JWT_SECRET
      - HOST=$HOST
      - TELEGRAM_TOKEN=$TELEGRAM_TOKEN
      - TELEGRAM_CHAT_ID=$TELEGRAM_CHAT_ID
      - TELEGRAM_LEVEL=$TELEGRAM_LEVEL

    restart: always
    networks:
      - awesome

networks:
  awesome:
    driver: bridge
